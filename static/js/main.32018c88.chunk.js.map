{"version":3,"sources":["../gmk_images sync nonrecursive //.[^/.]+$","../gmk_images/8008.jpeg","../gmk_images/9009.jpeg","../gmk_images/botanical.png","../gmk_images/cafe.jpg","../gmk_images/camping.jpeg","../gmk_images/laser.png","../gmk_images/mizu.png","../gmk_images/nautilus.jpg","../gmk_images/oblivion.png","../gmk_images/olivia.png","../gmk_images/wob.jpg","loadImages.js","firebase.js","Home.js","thinking.png","Product.js","NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","images","r","forEach","item","replace","importAll","require","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","enablePersistence","catch","err","console","error","HomePage","useState","topGMK","setTopGMK","useEffect","top","collection","orderBy","limitToLast","get","then","querySnapshot","doc","push","reverse","className","style","padding","margin","product","split","to","src","default","alt","charAt","toUpperCase","slice","href","whiteSpace","SETS","MONTHS","START_DATE","END_DATE","START_DATE_DT","Date","END_DATE_DT","sortObjectByKey","obj","key","asc","sort","a","b","datePrettyFormat","ts","d","getMonth","getFullYear","NoDataPage","props","sets","setSets","setNames","results","Fuse","includeScore","threshold","search","data","productID","newSets","result","added","length","fontSize","s","thinkingEmote","fontWeight","Product","useParams","toLowerCase","isMount","isMountRef","useRef","current","useIsMount","gmkID","setProduct","average","setAverage","start","end","dataShowParams","setDataShowParams","setsShow","setSetsShow","currentSort","setCurrentSort","clickLeft","setClickLeft","clickRight","setClickRight","graphLeft","setGraphLeft","graphRight","setGraphRight","tableHeader","field","onClick","sumByMonth","year","month","allData","newData","dateConvert","date","toDate","category","price","linkFull","link","join","averageByMonth","keyMonth","y","m","monthAverage","getTime","monthData","keyCategory","categoryData","isNaN","Math","round","LineChart","width","height","payload","target","baseVal","onMouseDown","activeLabel","onMouseMove","onMouseUp","refLeft","refRight","endD","setMonth","zoom","CartesianGrid","strokeDasharray","XAxis","dataKey","type","scale","left","right","interval","angle","tickMargin","domain","allowDataOverflow","tickFormatter","YAxis","label","value","position","Tooltip","labelFormatter","formatter","name","Legend","Line","stroke","activeDot","ReferenceArea","x1","x2","strokeOpacity","box","setName","Fragment","htmlFor","checked","includes","onChange","currentTarget","filter","marginLeft","p","rel","toString","ProductPage","useRouteMatch","path","url","exact","Search","Input","SearchBar","history","useHistory","placeholder","onSearch","NavBar","App","state","Home","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32018c88.chunk.js","sourcesContent":["var map = {\n\t\"./8008.jpeg\": 221,\n\t\"./9009.jpeg\": 222,\n\t\"./botanical.png\": 223,\n\t\"./cafe.jpg\": 224,\n\t\"./camping.jpeg\": 225,\n\t\"./laser.png\": 226,\n\t\"./mizu.png\": 227,\n\t\"./nautilus.jpg\": 228,\n\t\"./oblivion.png\": 229,\n\t\"./olivia.png\": 230,\n\t\"./wob.jpg\": 231\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 220;","export default __webpack_public_path__ + \"static/media/8008.c8e1e650.jpeg\";","export default __webpack_public_path__ + \"static/media/9009.e9d053b1.jpeg\";","export default __webpack_public_path__ + \"static/media/botanical.3b73d64d.png\";","export default __webpack_public_path__ + \"static/media/cafe.bdac71c0.jpg\";","export default __webpack_public_path__ + \"static/media/camping.9b098e2a.jpeg\";","export default __webpack_public_path__ + \"static/media/laser.aff55880.png\";","export default __webpack_public_path__ + \"static/media/mizu.eb4bc4b3.png\";","export default __webpack_public_path__ + \"static/media/nautilus.d0b20cd1.jpg\";","export default __webpack_public_path__ + \"static/media/oblivion.04bfe77a.png\";","export default __webpack_public_path__ + \"static/media/olivia.87bda4e2.png\";","export default __webpack_public_path__ + \"static/media/wob.6618efec.jpg\";","function importAll(r) {\n    let images = {};\n    r.keys().forEach((item) => { images[item.replace('./', '').replace(/\\.[^/.]+$/, \"\")] = r(item); });\n    return images;\n}\n\nconst images = importAll(require.context('../gmk_images', false, /\\.[^/.]+$/));\n\nexport default images;","import firebase from 'firebase'\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAcBmvPhJ0uJjEyeTZRiGC_fsTF8GDCRSA\",\n    authDomain: \"mm-tracker-760cf.firebaseapp.com\",\n    projectId: \"mm-tracker-760cf\",\n    storageBucket: \"mm-tracker-760cf.appspot.com\",\n    messagingSenderId: \"692582051190\",\n    appId: \"1:692582051190:web:0d71918a4278a62657de57\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\ndb.enablePersistence()\n    .catch((err) => {\n        console.error(err)\n    });\n\n\nexport default db;","import { Link } from \"react-router-dom\";\nimport images from \"./loadImages\";\nimport db from \"./firebase\";\nimport { useState, useEffect } from 'react';\n\nfunction HomePage() {\n    const [topGMK, setTopGMK] = useState([]);\n\n    useEffect(() => {\n        let top = [];\n        db.collection(\"gmk\").orderBy('count').limitToLast(8).get().then(querySnapshot => {\n            querySnapshot.forEach(doc => {\n                top.push(doc.id);\n            })\n            setTopGMK(top.reverse());\n        })\n    }, []);\n    return (\n        <div className='home-page'>\n            <div className=\"graph\" style={{ padding: 10 }}>\n                <p className=\"section-header\" style={{ margin: 0 }} >Popular Sets</p>\n            </div>\n            <div className='top-images'>\n                {topGMK.map((id) => {\n                    let product = id.split(\" \")[1];\n                    return (\n                        <Link to={'/products/' + product + '/'} key={id}>\n                            <div className=\"square\" >\n                                <div className=\"content\">\n                                    <div className=\"table\">\n                                        <div className=\"table-cell\">\n                                            <img className=\"rs\" src={images[product].default} alt={id} />\n                                            <p className=\"home-gmk\"> GMK {product.charAt(0).toUpperCase() + product.slice(1)} </p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Link>\n                    )\n                })\n                }\n            </div>\n            <div className='info'>\n                <dl>\n                    <dt className=\"section-header\">Website Information & FAQ</dt>\n                    <dd>This project was created by Aaryan Agrawal and Daniel Li, with help from Wesley Liu. The source code is available at <a href=\"https://github.com/13Ducks/GMKPriceTracker\" style={{ whiteSpace: \"nowrap\" }}>https://github.com/13Ducks/GMKPriceTracker</a>.</dd>\n                    <dt>How was the data collected?</dt>\n                    <dd>All posts that seemed to be selling GMK keycaps on <a href=\"https://www.reddit.com/r/mechmarket/\">r/mechmarket</a> were scraped and parsed to try to identify the product and the price it was sold at.</dd>\n                    <dt>Why are some of the prices/products incorrect?</dt>\n                    <dd>Parsing real text is hard. Many situations are impossible to parse algorithmically leading to incorrect data, but we have tried to minimize errors through post-parsing statistics and other measures.</dd>\n                    <dt>Why are the set names only one word?</dt>\n                    <dd>Due to the nature of our parsing algorithm, the only way we could get GMK set names without a premade list is by using the first word of a set name.</dd>\n                    <dt>What technology does this project use?</dt>\n                    <dd>\n                        <ul>\n                            <li>Scraping: <a href=\"https://pypi.org/project/psaw/\">PSAW</a></li>\n                            <li>Parsing: <a href=\"https://www.python.org/\">Python</a>, <a href=\"https://pypi.org/project/pandas/\">Pandas</a></li>\n                            <li>Database: <a href=\"https://firebase.google.com/\">Firebase</a></li>\n                            <li>Website: <a href=\"https://reactjs.org/\">React</a>, <a href=\"https://recharts.org/\">Recharts</a>, <a href=\"https://reactrouter.com/\">React Router</a>, <a href=\"https://ant.design/\">Ant Design</a>, <a href=\"https://fusejs.io/\">Fuse.js</a></li>\n                        </ul>\n                    </dd>\n                    <dt>What GMK sets do you own?</dt>\n                    <dd>At the moment, Cafe, Darling, and Peaches n Cream.</dd>\n                </dl>\n            </div>\n        </div >\n    );\n}\n\nexport default HomePage;\n","export default __webpack_public_path__ + \"static/media/thinking.955ba4dc.png\";","import React, { useEffect, useState, useRef } from 'react';\n\nimport {\n    Link,\n    Switch,\n    Route,\n    Redirect,\n    useRouteMatch,\n    useParams\n} from \"react-router-dom\";\n\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ReferenceArea,\n} from \"recharts\";\n\nimport Fuse from \"fuse.js\";\n\nimport db from './firebase.js';\nimport thinkingEmote from './thinking.png'\n\nconst SETS = [\"base\", \"bundle\", \"single\", \"other\"];\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nconst START_DATE = [2020, 1];\nconst END_DATE = [2021, 12];\nconst START_DATE_DT = new Date(START_DATE[0], START_DATE[1] - 1, 1, 0, 0, 0, 0);\nconst END_DATE_DT = new Date(END_DATE[0], END_DATE[1] - 1, 1, 0, 0, 0, 0);\n\nfunction sortObjectByKey(obj, key, asc) {\n    if (asc)\n        return obj.sort((a, b) => a[key] < b[key] ? -1 : a[key] > b[key] ? 1 : 0)\n    else\n        return obj.sort((a, b) => b[key] < a[key] ? -1 : b[key] > a[key] ? 1 : 0)\n}\n\nfunction datePrettyFormat(ts) {\n    let d = new Date(ts);\n    return MONTHS[d.getMonth()] + \" \" + d.getFullYear()\n}\n\nfunction ProductPage() {\n    const { path, url } = useRouteMatch();\n    return (\n        <div>\n            <Switch>\n                <Route exact path={path}>\n                    <Redirect to={\"/\"} />\n                </Route>\n                <Route path={`${path}/:productID`}>\n                    <Product />\n                </Route>\n            </Switch>\n        </div>\n    );\n}\n\nconst useIsMount = () => {\n    const isMountRef = useRef(true);\n    useEffect(() => {\n        isMountRef.current = false;\n    }, []);\n    return isMountRef.current;\n};\n\nfunction NoDataPage(props) {\n    const [sets, setSets] = useState([\"not mounted\"]);\n\n    useEffect(() => {\n        let setNames = [];\n        db.collection(\"gmk\").get().then(querySnapshot => {\n            querySnapshot.forEach(doc => {\n                setNames.push(doc.id);\n            })\n\n            const fuse = new Fuse(setNames, { includeScore: true, threshold: 0.3 });\n            let results = fuse.search(props.data.productID);\n\n            let newSets = [];\n            results.forEach(result => {\n                let split = result.item.split(\" \")[1];\n                if (split) {\n                    newSets.push(split);\n                }\n            })\n\n            setSets(newSets.slice(0, 10));\n        })\n    }, [props.data.productID]);\n\n    let id = props.data.productID\n\n    let added = [];\n\n    if (sets.length === 0) {\n        added.push(<p style={{ fontSize: 20 }} key=\"none\">No similarly named sets were found.</p>);\n    } else if (sets[0] !== \"not mounted\") {\n        added.push(<p style={{ fontSize: 20 }} key=\"meant\">Did you mean one of the following?</p>);\n        sets.forEach((s) => {\n            added.push(\n                <Link to={'/products/' + s + '/'} key={s}>\n                    <p style={{ fontSize: 20, margin: 0 }}>GMK {s.charAt(0).toUpperCase() + s.slice(1)}</p>\n                </Link>\n            )\n        })\n    }\n\n    return (<div className=\"graph\" style={{ padding: 20 }}>\n        <img src={thinkingEmote} alt=\"thinking emote\" style={{ padding: 20 }} />\n        <p style={{ margin: 0, fontSize: 20 }}>No data was found for for <span style={{ fontWeight: \"bold\" }}> GMK {id.charAt(0).toUpperCase() + id.slice(1)}</span></p>\n        {added}\n    </div>)\n}\n\nfunction Product() {\n    let { productID } = useParams();\n    productID = productID.toLowerCase();\n\n    if (productID.split(\" \")[0] === \"gmk\") {\n        productID = productID.split(\" \")[1];\n    }\n\n    if (productID.split(\" \").length > 1) {\n        productID = productID.split(\" \")[0];\n    }\n\n    const isMount = useIsMount();\n\n    const gmkID = \"gmk \" + productID\n    const [product, setProduct] = useState([]);\n    const [average, setAverage] = useState([]);\n    const [dataShowParams, setDataShowParams] = useState({ start: START_DATE_DT, end: END_DATE_DT });\n    const [setsShow, setSetsShow] = useState([...SETS]);\n    const [currentSort, setCurrentSort] = useState(['date', true]);\n    const [clickLeft, setClickLeft] = useState(\"\");\n    const [clickRight, setClickRight] = useState(\"\");\n    const [graphLeft, setGraphLeft] = useState(START_DATE_DT);\n    const [graphRight, setGraphRight] = useState(END_DATE_DT);\n\n    function buttonSetInclude(setName) {\n        return (\n            <React.Fragment key={setName}>\n                <label className=\"includeSetBox\" htmlFor={`chk${setName}`}>{setName}</label>\n                <input\n                    id={`chk${setName.name}`}\n                    type=\"checkbox\"\n                    checked={setsShow.includes(setName)}\n                    onChange={(e) => {\n                        if (e.currentTarget.checked) {\n                            setSetsShow([...setsShow, setName]);\n                        } else {\n                            setSetsShow(setsShow.filter((name) => name !== setName));\n                        }\n                    }}\n                    style={{ marginLeft: \"3px\" }}\n                />\n            </React.Fragment>\n        )\n    }\n\n    function tableHeader(field) {\n        return (\n            <th onClick={() => {\n                if (currentSort[0] === field) {\n                    setProduct(sortObjectByKey(product.slice(), field, !currentSort[1]))\n                    setCurrentSort([field, !currentSort[1]])\n                } else {\n                    setCurrentSort([field, true])\n                    setProduct(sortObjectByKey(product.slice(), field, true))\n                }\n\n            }}>{field + \"  \" + (currentSort[0] === field ? currentSort[1] ? \"▲\" : \"▼\" : \"⇕\")}</th>\n        )\n    }\n\n    function zoom() {\n        let refLeft = clickLeft\n        let refRight = clickRight\n\n        if (refLeft === refRight || refRight === \"\") {\n            setClickLeft(\"\");\n            setClickRight(\"\");\n\n            if (refLeft !== \"\") {\n                let endD = new Date(refLeft);\n                endD.setMonth(endD.getMonth() + 1);\n                setDataShowParams({ start: refLeft, end: endD });\n            }\n            return;\n        }\n\n        if (refLeft > refRight) [refLeft, refRight] = [refRight, refLeft];\n\n        let endD = new Date(refRight);\n        endD.setMonth(endD.getMonth() + 1);\n\n        setGraphLeft(refLeft);\n        setGraphRight(refRight);\n        setClickLeft(\"\");\n        setClickRight(\"\");\n\n        setDataShowParams({ start: refLeft, end: endD });\n        return;\n    }\n\n    useEffect(() => {\n        db.collection(\"gmk\").doc(gmkID).collection('sales').orderBy('date').get().then(querySnapshot => {\n            let sumByMonth = {};\n            for (let year = START_DATE[0]; year <= END_DATE[0]; year++) {\n                for (let month = 1; month <= 12; month++) {\n                    if (year === START_DATE[0] && month < START_DATE[1]) continue;\n                    if (year === END_DATE[0] && month > END_DATE[1]) continue;\n\n                    // sum, quantity\n                    sumByMonth[[year, month]] = { \"base\": [0, 0], \"bundle\": [0, 0], \"single\": [0, 0], \"other\": [0, 0] };\n                }\n            }\n\n            let allData = [];\n\n            querySnapshot.forEach(doc => {\n                let newData = doc.data();\n                let dateConvert = newData.date.toDate();\n                let key = [dateConvert.getFullYear(), dateConvert.getMonth() + 1];\n                allData.push({\n                    id: doc.id,\n                    category: newData.category,\n                    price: newData.price,\n                    linkFull: newData.link,\n                    link: newData.link.split(\"/\").slice(-2),\n                    date: dateConvert,\n                    sets: newData.sets.join(\", \"),\n                })\n\n                sumByMonth[key][newData.category][0] += newData.price;\n                sumByMonth[key][newData.category][1]++;\n            })\n\n            let averageByMonth = [];\n            for (let keyMonth in sumByMonth) {\n                let [y, m] = keyMonth.split(\",\");\n                let monthAverage = { \"epoch\": new Date(y, m - 1, 1, 0, 0, 0, 0).getTime() };\n                let monthData = sumByMonth[keyMonth];\n\n                for (let keyCategory in monthData) {\n                    let categoryData = monthData[keyCategory];\n                    let a = categoryData[0] / categoryData[1];\n                    if (!isNaN(a)) {\n                        monthAverage[keyCategory] = Math.round(a);\n                        monthAverage[keyCategory + \"_q\"] = categoryData[1];\n                    }\n                }\n\n                averageByMonth.push(monthAverage)\n            }\n\n            setProduct(allData);\n            setAverage(averageByMonth);\n        })\n    }, [gmkID]);\n\n    if (isMount) {\n        return null;\n    }\n\n    if (product.length === 0) {\n        return <NoDataPage data={{ productID: productID }} />;\n    }\n\n    return (\n        <div>\n            <div className=\"graph\">\n                <p style={{ padding: 20, margin: 0, fontSize: 20 }}>Showing results for <span style={{ fontWeight: \"bold\" }}> GMK {productID.charAt(0).toUpperCase() + productID.slice(1)}</span></p>\n\n                <LineChart\n                    width={900}\n                    height={400}\n                    data={average}\n                    onClick={(e, payload) => {\n                        if (e !== null && payload.target.className.baseVal !== \"recharts-dot\") {\n                            setSetsShow([...SETS]);\n                        }\n                    }}\n                    onMouseDown={(e) => { if (e !== null) setClickLeft(e.activeLabel) }}\n                    onMouseMove={(e) => { if (e !== null) clickLeft && setClickRight(e.activeLabel) }}\n                    onMouseUp={() => zoom()}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"epoch\" type=\"number\" scale=\"time\" padding={{ left: 25, right: 25 }} interval={0} angle={30} tickMargin={15} height={50} domain={[graphLeft, graphRight]} allowDataOverflow tickFormatter={datePrettyFormat} />\n                    <YAxis label={{ value: 'Price (USD)', angle: -90, position: 'insideLeft' }} />\n                    <Tooltip labelFormatter={datePrettyFormat} formatter={(value, name, props) => {\n                        return `$${props.payload[props.dataKey]}, ${props.payload[props.dataKey + \"_q\"]} units`\n                    }} />\n                    <Legend />\n                    <Line type=\"linear\" dataKey=\"base\" stroke=\"#4053d3\" activeDot={{ onClick: (e, payload) => setSetsShow([payload.dataKey]) }} />\n                    <Line type=\"linear\" dataKey=\"bundle\" stroke=\"#b51d14\" activeDot={{ onClick: (e, payload) => setSetsShow([payload.dataKey]) }} />\n                    <Line type=\"linear\" dataKey=\"single\" stroke=\"#00b25d\" activeDot={{ onClick: (e, payload) => setSetsShow([payload.dataKey]) }} />\n                    <Line type=\"linear\" dataKey=\"other\" stroke=\"#00beff\" activeDot={{ onClick: (e, payload) => setSetsShow([payload.dataKey]) }} />\n                    {clickLeft && clickRight ? (\n                        <ReferenceArea x1={clickLeft} x2={clickRight} strokeOpacity={0.3} />\n                    ) : null}\n                </LineChart>\n            </div>\n\n            <button className=\"resetSetButton\" onClick={() => {\n                setDataShowParams({ start: START_DATE_DT, end: END_DATE_DT })\n                setSetsShow([...SETS]);\n                setGraphLeft(START_DATE_DT);\n                setGraphRight(END_DATE_DT);\n            }}>\n                Reset\n            </button>\n\n            {SETS.map((box) => { return buttonSetInclude(box) })}\n\n\n\n            <table>\n                <thead>\n                    <tr>\n                        {tableHeader(\"category\")}\n                        {tableHeader(\"price\")}\n                        {tableHeader(\"link\")}\n                        {tableHeader(\"date\")}\n                        {tableHeader(\"sets\")}\n                    </tr>\n                </thead>\n                <tbody>\n                    {product.map((p) => {\n                        if (p.date >= dataShowParams.start && p.date <= dataShowParams.end && setsShow.includes(p.category)) {\n                            return (\n                                <tr key={p.id}>\n                                    <td>{p.category}</td>\n                                    <td>{p.price}</td>\n                                    <td>{<a href={\"https://www.reddit.com\" + p.linkFull} target=\"_blank\" rel=\"noopener noreferrer\">{p.link}</a>}</td>\n                                    <td>{p.date.toString()}</td>\n                                    <td>{p.sets}</td>\n                                </tr>\n                            )\n                        }\n\n                        return null\n                    })}\n                </tbody>\n            </table>\n        </div >\n    );\n}\n\nexport default ProductPage;","import React from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport './App.css';\n\nimport 'antd/dist/antd.css';\nimport { Input } from 'antd';\nconst { Search } = Input;\n\nfunction SearchBar() {\n    const history = useHistory();\n    const onSubmit = (value) => {\n        history.push(`/products/${value}`)\n    };\n\n    return (<Search placeholder=\"Search GMK prices\" onSearch={onSubmit} style={{ width: 250 }} />)\n}\n\n\nfunction NavBar() {\n    return (\n        <div className='nav-bar'>\n            <Link to='/' className='home-button'>\n                GMK Price Tracker\n            </Link>\n            <SearchBar />\n        </div>\n\n    );\n}\n\n\n\nexport default NavBar;","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport './App.css';\nimport HomePage from './Home.js'\nimport ProductPage from './Product.js';\nimport NavBar from './NavBar';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/products\">\n            <NavBar />\n            <ProductPage />\n          </Route>\n          <Route path=\"/\">\n            <NavBar />\n            <HomePage />\n          </Route>\n        </Switch>\n\n      </Router>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}